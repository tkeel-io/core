/*
Copyright 2021 The tKeel Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tseries.proto

package tseries // import "."

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TValue struct {
	Value                float64              `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *TValue) Reset()         { *m = TValue{} }
func (m *TValue) String() string { return proto.CompactTextString(m) }
func (*TValue) ProtoMessage()    {}
func (*TValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_tseries_3264674c2ef7b0fa, []int{0}
}
func (m *TValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TValue.Unmarshal(m, b)
}
func (m *TValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TValue.Marshal(b, m, deterministic)
}
func (dst *TValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TValue.Merge(dst, src)
}
func (m *TValue) XXX_Size() int {
	return xxx_messageInfo_TValue.Size(m)
}
func (m *TValue) XXX_DiscardUnknown() {
	xxx_messageInfo_TValue.DiscardUnknown(m)
}

var xxx_messageInfo_TValue proto.InternalMessageInfo

func (m *TValue) GetValue() float64 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *TValue) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

type Sample struct {
	Value                *TValue           `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Tags                 map[string]string `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Sample) Reset()         { *m = Sample{} }
func (m *Sample) String() string { return proto.CompactTextString(m) }
func (*Sample) ProtoMessage()    {}
func (*Sample) Descriptor() ([]byte, []int) {
	return fileDescriptor_tseries_3264674c2ef7b0fa, []int{1}
}
func (m *Sample) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sample.Unmarshal(m, b)
}
func (m *Sample) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sample.Marshal(b, m, deterministic)
}
func (dst *Sample) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sample.Merge(dst, src)
}
func (m *Sample) XXX_Size() int {
	return xxx_messageInfo_Sample.Size(m)
}
func (m *Sample) XXX_DiscardUnknown() {
	xxx_messageInfo_Sample.DiscardUnknown(m)
}

var xxx_messageInfo_Sample proto.InternalMessageInfo

func (m *Sample) GetValue() *TValue {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *Sample) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type SampleSequence struct {
	Values               []*TValue         `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	Tags                 map[string]string `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SampleSequence) Reset()         { *m = SampleSequence{} }
func (m *SampleSequence) String() string { return proto.CompactTextString(m) }
func (*SampleSequence) ProtoMessage()    {}
func (*SampleSequence) Descriptor() ([]byte, []int) {
	return fileDescriptor_tseries_3264674c2ef7b0fa, []int{2}
}
func (m *SampleSequence) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SampleSequence.Unmarshal(m, b)
}
func (m *SampleSequence) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SampleSequence.Marshal(b, m, deterministic)
}
func (dst *SampleSequence) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SampleSequence.Merge(dst, src)
}
func (m *SampleSequence) XXX_Size() int {
	return xxx_messageInfo_SampleSequence.Size(m)
}
func (m *SampleSequence) XXX_DiscardUnknown() {
	xxx_messageInfo_SampleSequence.DiscardUnknown(m)
}

var xxx_messageInfo_SampleSequence proto.InternalMessageInfo

func (m *SampleSequence) GetValues() []*TValue {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *SampleSequence) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type SampleBundle struct {
	Values               []*SampleSequence `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *SampleBundle) Reset()         { *m = SampleBundle{} }
func (m *SampleBundle) String() string { return proto.CompactTextString(m) }
func (*SampleBundle) ProtoMessage()    {}
func (*SampleBundle) Descriptor() ([]byte, []int) {
	return fileDescriptor_tseries_3264674c2ef7b0fa, []int{3}
}
func (m *SampleBundle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SampleBundle.Unmarshal(m, b)
}
func (m *SampleBundle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SampleBundle.Marshal(b, m, deterministic)
}
func (dst *SampleBundle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SampleBundle.Merge(dst, src)
}
func (m *SampleBundle) XXX_Size() int {
	return xxx_messageInfo_SampleBundle.Size(m)
}
func (m *SampleBundle) XXX_DiscardUnknown() {
	xxx_messageInfo_SampleBundle.DiscardUnknown(m)
}

var xxx_messageInfo_SampleBundle proto.InternalMessageInfo

func (m *SampleBundle) GetValues() []*SampleSequence {
	if m != nil {
		return m.Values
	}
	return nil
}

func init() {
	proto.RegisterType((*TValue)(nil), "tseries.TValue")
	proto.RegisterType((*Sample)(nil), "tseries.Sample")
	proto.RegisterMapType((map[string]string)(nil), "tseries.Sample.TagsEntry")
	proto.RegisterType((*SampleSequence)(nil), "tseries.SampleSequence")
	proto.RegisterMapType((map[string]string)(nil), "tseries.SampleSequence.TagsEntry")
	proto.RegisterType((*SampleBundle)(nil), "tseries.SampleBundle")
}

func init() { proto.RegisterFile("tseries.proto", fileDescriptor_tseries_3264674c2ef7b0fa) }

var fileDescriptor_tseries_3264674c2ef7b0fa = []byte{
	// 286 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x91, 0xcb, 0x4a, 0xc4, 0x30,
	0x14, 0x86, 0x49, 0x47, 0x2b, 0x3d, 0xf5, 0x46, 0x10, 0xac, 0xdd, 0x58, 0x0b, 0x62, 0x37, 0xa6,
	0x50, 0x11, 0x07, 0x5d, 0x08, 0x03, 0xbe, 0x40, 0xa7, 0x88, 0xb8, 0xcb, 0xe8, 0xb1, 0x0c, 0xf6,
	0x66, 0x93, 0x0a, 0xf3, 0x24, 0x3e, 0x83, 0x6f, 0x29, 0x93, 0x34, 0x1d, 0x1d, 0x71, 0xe7, 0x2e,
	0xe7, 0xe4, 0xef, 0xf7, 0x7f, 0x25, 0xb0, 0x23, 0x05, 0xb6, 0x73, 0x14, 0xac, 0x69, 0x6b, 0x59,
	0xd3, 0xad, 0x7e, 0xf4, 0x8f, 0xf3, 0xba, 0xce, 0x0b, 0x8c, 0xd5, 0x7a, 0xd6, 0xbd, 0xc4, 0x72,
	0x5e, 0xa2, 0x90, 0xbc, 0x6c, 0x74, 0x32, 0x7c, 0x00, 0x3b, 0xbb, 0xe7, 0x45, 0x87, 0xf4, 0x00,
	0x36, 0xdf, 0x97, 0x07, 0x8f, 0x04, 0x24, 0x22, 0xa9, 0x1e, 0xe8, 0x18, 0x9c, 0xe1, 0x13, 0xcf,
	0x0a, 0x48, 0xe4, 0x26, 0x3e, 0xd3, 0x50, 0x66, 0xa0, 0x2c, 0x33, 0x89, 0x74, 0x15, 0x0e, 0x3f,
	0x08, 0xd8, 0x53, 0x5e, 0x36, 0x05, 0xd2, 0xd3, 0xef, 0x68, 0x37, 0xd9, 0x63, 0xc6, 0x56, 0x57,
	0x9b, 0xae, 0x73, 0xd8, 0x90, 0x3c, 0x17, 0x9e, 0x15, 0x8c, 0x22, 0x37, 0x39, 0x1a, 0x52, 0x9a,
	0xc2, 0x32, 0x9e, 0x8b, 0xbb, 0x4a, 0xb6, 0x8b, 0x54, 0xc5, 0xfc, 0x2b, 0x70, 0x86, 0x15, 0xdd,
	0x87, 0xd1, 0x2b, 0x2e, 0x54, 0x81, 0x93, 0x2e, 0x8f, 0xab, 0xff, 0xb1, 0xd4, 0x4e, 0x0f, 0xd7,
	0xd6, 0x98, 0x84, 0x9f, 0x04, 0x76, 0x35, 0x73, 0x8a, 0x6f, 0x1d, 0x56, 0x4f, 0x48, 0xcf, 0xc0,
	0x56, 0xf7, 0xc2, 0x23, 0xaa, 0xfc, 0x97, 0x62, 0x7f, 0x4d, 0x2f, 0x7f, 0x38, 0x9e, 0xac, 0x39,
	0x1a, 0xde, 0xff, 0xb9, 0xde, 0xc2, 0xb6, 0x46, 0x4f, 0xba, 0xea, 0xb9, 0x40, 0x1a, 0xaf, 0x89,
	0x1e, 0xfe, 0x61, 0x60, 0x84, 0x27, 0xee, 0xa3, 0xc3, 0x6e, 0xfa, 0xcc, 0xcc, 0x56, 0x4f, 0x76,
	0xf1, 0x15, 0x00, 0x00, 0xff, 0xff, 0xc0, 0x94, 0x45, 0xbf, 0x2f, 0x02, 0x00, 0x00,
}

name: lint and test
on:
  push:
    branches:
      - master
      - main
      - release-*
  pull_request:
    branches:
      - master
      - main
      - release-*
jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.42

  unittest:
    name: Test in ${{ matrix.target_os }}_${{ matrix.target_arch }} with Go_${{ matrix.go }}
    runs-on: ${{ matrix.os }}
    needs: [lint]
    env:
      GOOS: ${{ matrix.target_os }}
      GOARCH: ${{ matrix.target_arch }}
      GOPROXY: https://proxy.golang.org
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        go: [1.17.3, 1.16]
        target_arch: [amd64]
        include:
          - os: ubuntu-latest
            target_os: linux
          - os: windows-latest
            target_os: windows
          - os: macOS-latest
            target_os: darwin
      fail-fast: false
    steps:
      - name: Set up Go ${{ matrix.go }}
        uses: actions/setup-go@v2.1.4
        with:
          go-version: ${{ matrix.go }}
      - name: Check out code
        uses: actions/checkout@v2
      - name: Run make go.mod check-diff
        if: matrix.target_os == 'linux'
        run: git diff --exit-code ./go.mod
      - name: run test in widnows
        if: matrix.target_os == 'windows'
        run: go test -v -cover -gcflags=all=-l .\...
      - name: run tests
        if: matrix.target_os != 'windows'
        run: go test -v -cover -gcflags=all=-l -coverprofile=coverage.out ./...
      - name: Upload coverage to Codecov
        if: matrix.target_os == 'linux'
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: coverage.out

  E2ETest:
    name: E2E Test
    runs-on: ubuntu-latest
    needs:
      - unittest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1.2.0
        with:
          config: .github/workflows/kind/kind.yaml

      - name: run e2e test
        run: docker exec chart-testing-control-plane /bin/bash -c ". /core/.github/scripts/run_e2e_test.sh"
